/*
HW Mux Reservation System

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.26.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hwmux

import (
	"encoding/json"
	"fmt"
)

// checks if the ResourceStatusRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceStatusRequest{}

// ResourceStatusRequest struct for ResourceStatusRequest
type ResourceStatusRequest struct {
	Status StatusEnum `json:"status"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	Comment *string `json:"comment,omitempty"`
}

type _ResourceStatusRequest ResourceStatusRequest

// NewResourceStatusRequest instantiates a new ResourceStatusRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceStatusRequest(status StatusEnum) *ResourceStatusRequest {
	this := ResourceStatusRequest{}
	this.Status = status
	return &this
}

// NewResourceStatusRequestWithDefaults instantiates a new ResourceStatusRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceStatusRequestWithDefaults() *ResourceStatusRequest {
	this := ResourceStatusRequest{}
	return &this
}

// GetStatus returns the Status field value
func (o *ResourceStatusRequest) GetStatus() StatusEnum {
	if o == nil {
		var ret StatusEnum
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ResourceStatusRequest) GetStatusOk() (*StatusEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ResourceStatusRequest) SetStatus(v StatusEnum) {
	o.Status = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ResourceStatusRequest) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceStatusRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ResourceStatusRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *ResourceStatusRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *ResourceStatusRequest) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceStatusRequest) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *ResourceStatusRequest) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *ResourceStatusRequest) SetComment(v string) {
	o.Comment = &v
}

func (o ResourceStatusRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceStatusRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	return toSerialize, nil
}

func (o *ResourceStatusRequest) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResourceStatusRequest := _ResourceStatusRequest{}

	err = json.Unmarshal(bytes, &varResourceStatusRequest)

	if err != nil {
		return err
	}

	*o = ResourceStatusRequest(varResourceStatusRequest)

	return err
}

type NullableResourceStatusRequest struct {
	value *ResourceStatusRequest
	isSet bool
}

func (v NullableResourceStatusRequest) Get() *ResourceStatusRequest {
	return v.value
}

func (v *NullableResourceStatusRequest) Set(val *ResourceStatusRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceStatusRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceStatusRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceStatusRequest(val *ResourceStatusRequest) *NullableResourceStatusRequest {
	return &NullableResourceStatusRequest{value: val, isSet: true}
}

func (v NullableResourceStatusRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceStatusRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


