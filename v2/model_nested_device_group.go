/*
HW Mux Reservation System

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.27.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hwmux

import (
	"encoding/json"
)

// NestedDeviceGroup struct for NestedDeviceGroup
type NestedDeviceGroup struct {
	Name string `json:"name"`
	Devices []WriteOnlyDevice `json:"devices,omitempty"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	PermissionGroups []string `json:"permission_groups,omitempty"`
	EnableAhs *bool `json:"enable_ahs,omitempty"`
	EnableAhsActions *bool `json:"enable_ahs_actions,omitempty"`
	EnableAhsCas *bool `json:"enable_ahs_cas,omitempty"`
}

// NewNestedDeviceGroup instantiates a new NestedDeviceGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNestedDeviceGroup(name string) *NestedDeviceGroup {
	this := NestedDeviceGroup{}
	this.Name = name
	return &this
}

// NewNestedDeviceGroupWithDefaults instantiates a new NestedDeviceGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNestedDeviceGroupWithDefaults() *NestedDeviceGroup {
	this := NestedDeviceGroup{}
	return &this
}

// GetName returns the Name field value
func (o *NestedDeviceGroup) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NestedDeviceGroup) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NestedDeviceGroup) SetName(v string) {
	o.Name = v
}

// GetDevices returns the Devices field value if set, zero value otherwise.
func (o *NestedDeviceGroup) GetDevices() []WriteOnlyDevice {
	if o == nil || isNil(o.Devices) {
		var ret []WriteOnlyDevice
		return ret
	}
	return o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NestedDeviceGroup) GetDevicesOk() ([]WriteOnlyDevice, bool) {
	if o == nil || isNil(o.Devices) {
    return nil, false
	}
	return o.Devices, true
}

// HasDevices returns a boolean if a field has been set.
func (o *NestedDeviceGroup) HasDevices() bool {
	if o != nil && !isNil(o.Devices) {
		return true
	}

	return false
}

// SetDevices gets a reference to the given []WriteOnlyDevice and assigns it to the Devices field.
func (o *NestedDeviceGroup) SetDevices(v []WriteOnlyDevice) {
	o.Devices = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NestedDeviceGroup) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NestedDeviceGroup) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Metadata) {
    return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *NestedDeviceGroup) HasMetadata() bool {
	if o != nil && isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *NestedDeviceGroup) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetPermissionGroups returns the PermissionGroups field value if set, zero value otherwise.
func (o *NestedDeviceGroup) GetPermissionGroups() []string {
	if o == nil || isNil(o.PermissionGroups) {
		var ret []string
		return ret
	}
	return o.PermissionGroups
}

// GetPermissionGroupsOk returns a tuple with the PermissionGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NestedDeviceGroup) GetPermissionGroupsOk() ([]string, bool) {
	if o == nil || isNil(o.PermissionGroups) {
    return nil, false
	}
	return o.PermissionGroups, true
}

// HasPermissionGroups returns a boolean if a field has been set.
func (o *NestedDeviceGroup) HasPermissionGroups() bool {
	if o != nil && !isNil(o.PermissionGroups) {
		return true
	}

	return false
}

// SetPermissionGroups gets a reference to the given []string and assigns it to the PermissionGroups field.
func (o *NestedDeviceGroup) SetPermissionGroups(v []string) {
	o.PermissionGroups = v
}

// GetEnableAhs returns the EnableAhs field value if set, zero value otherwise.
func (o *NestedDeviceGroup) GetEnableAhs() bool {
	if o == nil || isNil(o.EnableAhs) {
		var ret bool
		return ret
	}
	return *o.EnableAhs
}

// GetEnableAhsOk returns a tuple with the EnableAhs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NestedDeviceGroup) GetEnableAhsOk() (*bool, bool) {
	if o == nil || isNil(o.EnableAhs) {
    return nil, false
	}
	return o.EnableAhs, true
}

// HasEnableAhs returns a boolean if a field has been set.
func (o *NestedDeviceGroup) HasEnableAhs() bool {
	if o != nil && !isNil(o.EnableAhs) {
		return true
	}

	return false
}

// SetEnableAhs gets a reference to the given bool and assigns it to the EnableAhs field.
func (o *NestedDeviceGroup) SetEnableAhs(v bool) {
	o.EnableAhs = &v
}

// GetEnableAhsActions returns the EnableAhsActions field value if set, zero value otherwise.
func (o *NestedDeviceGroup) GetEnableAhsActions() bool {
	if o == nil || isNil(o.EnableAhsActions) {
		var ret bool
		return ret
	}
	return *o.EnableAhsActions
}

// GetEnableAhsActionsOk returns a tuple with the EnableAhsActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NestedDeviceGroup) GetEnableAhsActionsOk() (*bool, bool) {
	if o == nil || isNil(o.EnableAhsActions) {
    return nil, false
	}
	return o.EnableAhsActions, true
}

// HasEnableAhsActions returns a boolean if a field has been set.
func (o *NestedDeviceGroup) HasEnableAhsActions() bool {
	if o != nil && !isNil(o.EnableAhsActions) {
		return true
	}

	return false
}

// SetEnableAhsActions gets a reference to the given bool and assigns it to the EnableAhsActions field.
func (o *NestedDeviceGroup) SetEnableAhsActions(v bool) {
	o.EnableAhsActions = &v
}

// GetEnableAhsCas returns the EnableAhsCas field value if set, zero value otherwise.
func (o *NestedDeviceGroup) GetEnableAhsCas() bool {
	if o == nil || isNil(o.EnableAhsCas) {
		var ret bool
		return ret
	}
	return *o.EnableAhsCas
}

// GetEnableAhsCasOk returns a tuple with the EnableAhsCas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NestedDeviceGroup) GetEnableAhsCasOk() (*bool, bool) {
	if o == nil || isNil(o.EnableAhsCas) {
    return nil, false
	}
	return o.EnableAhsCas, true
}

// HasEnableAhsCas returns a boolean if a field has been set.
func (o *NestedDeviceGroup) HasEnableAhsCas() bool {
	if o != nil && !isNil(o.EnableAhsCas) {
		return true
	}

	return false
}

// SetEnableAhsCas gets a reference to the given bool and assigns it to the EnableAhsCas field.
func (o *NestedDeviceGroup) SetEnableAhsCas(v bool) {
	o.EnableAhsCas = &v
}

func (o NestedDeviceGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Devices) {
		toSerialize["devices"] = o.Devices
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if !isNil(o.PermissionGroups) {
		toSerialize["permission_groups"] = o.PermissionGroups
	}
	if !isNil(o.EnableAhs) {
		toSerialize["enable_ahs"] = o.EnableAhs
	}
	if !isNil(o.EnableAhsActions) {
		toSerialize["enable_ahs_actions"] = o.EnableAhsActions
	}
	if !isNil(o.EnableAhsCas) {
		toSerialize["enable_ahs_cas"] = o.EnableAhsCas
	}
	return json.Marshal(toSerialize)
}

type NullableNestedDeviceGroup struct {
	value *NestedDeviceGroup
	isSet bool
}

func (v NullableNestedDeviceGroup) Get() *NestedDeviceGroup {
	return v.value
}

func (v *NullableNestedDeviceGroup) Set(val *NestedDeviceGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableNestedDeviceGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableNestedDeviceGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNestedDeviceGroup(val *NestedDeviceGroup) *NullableNestedDeviceGroup {
	return &NullableNestedDeviceGroup{value: val, isSet: true}
}

func (v NullableNestedDeviceGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNestedDeviceGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


