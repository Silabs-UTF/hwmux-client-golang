/*
HW Mux Reservation System

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.31.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hwmux

import (
	"encoding/json"
	"fmt"
)

// ResourceStatusRequestStatusEnum * `ACTIVE` - ACTIVE * `DISABLED` - DISABLED * `OFFLINE` - OFFLINE
type ResourceStatusRequestStatusEnum string

// List of ResourceStatusRequestStatusEnum
const (
	ACTIVE ResourceStatusRequestStatusEnum = "ACTIVE"
	DISABLED ResourceStatusRequestStatusEnum = "DISABLED"
	OFFLINE ResourceStatusRequestStatusEnum = "OFFLINE"
)

// All allowed values of ResourceStatusRequestStatusEnum enum
var AllowedResourceStatusRequestStatusEnumEnumValues = []ResourceStatusRequestStatusEnum{
	"ACTIVE",
	"DISABLED",
	"OFFLINE",
}

func (v *ResourceStatusRequestStatusEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ResourceStatusRequestStatusEnum(value)
	for _, existing := range AllowedResourceStatusRequestStatusEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ResourceStatusRequestStatusEnum", value)
}

// NewResourceStatusRequestStatusEnumFromValue returns a pointer to a valid ResourceStatusRequestStatusEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewResourceStatusRequestStatusEnumFromValue(v string) (*ResourceStatusRequestStatusEnum, error) {
	ev := ResourceStatusRequestStatusEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ResourceStatusRequestStatusEnum: valid values are %v", v, AllowedResourceStatusRequestStatusEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ResourceStatusRequestStatusEnum) IsValid() bool {
	for _, existing := range AllowedResourceStatusRequestStatusEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ResourceStatusRequestStatusEnum value
func (v ResourceStatusRequestStatusEnum) Ptr() *ResourceStatusRequestStatusEnum {
	return &v
}

type NullableResourceStatusRequestStatusEnum struct {
	value *ResourceStatusRequestStatusEnum
	isSet bool
}

func (v NullableResourceStatusRequestStatusEnum) Get() *ResourceStatusRequestStatusEnum {
	return v.value
}

func (v *NullableResourceStatusRequestStatusEnum) Set(val *ResourceStatusRequestStatusEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceStatusRequestStatusEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceStatusRequestStatusEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceStatusRequestStatusEnum(val *ResourceStatusRequestStatusEnum) *NullableResourceStatusRequestStatusEnum {
	return &NullableResourceStatusRequestStatusEnum{value: val, isSet: true}
}

func (v NullableResourceStatusRequestStatusEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceStatusRequestStatusEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

