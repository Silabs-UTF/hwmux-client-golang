openapi: 3.0.3
info:
  title: HW Mux Reservation System
  version: 2.9.0
servers:
- description: HW Mux Server
  url: https://hwmux.silabs.net
paths:
  /api-token-auth/:
    post:
      operationId: _token_auth_create
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - -token-auth
  /api/devices/:
    get:
      description: Create or update with permissions field support
      operationId: devices_list
      parameters:
      - explode: true
        in: query
        name: date_created
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: is_wstk
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: last_update
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: online
        required: false
        schema:
          type: boolean
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: part
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: part_family
        required: false
        schema:
          title: Part family name
          type: string
        style: form
      - explode: true
        in: query
        name: room
        required: false
        schema:
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: site
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sn_or_name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sn_or_name__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: uri
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: uri__isnull
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceSerializerPublicList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - devices
    post:
      description: Create or update with permissions field support
      operationId: devices_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyDevice'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyDevice'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - devices
  /api/devices/{device_pk}/location/:
    get:
      operationId: devices_location_retrieve
      parameters:
      - explode: false
        in: path
        name: device_pk
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - devices
  /api/devices/{id}/:
    delete:
      description: Create or update with permissions field support
      operationId: devices_destroy
      parameters:
      - description: A unique integer value identifying this device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - devices
    get:
      description: Create or update with permissions field support
      operationId: devices_retrieve
      parameters:
      - description: A unique integer value identifying this device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceSerializerPublic'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - devices
    patch:
      description: Create or update with permissions field support
      operationId: devices_partial_update
      parameters:
      - description: A unique integer value identifying this device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWriteOnlyDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWriteOnlyDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWriteOnlyDevice'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyDevice'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - devices
    put:
      description: Create or update with permissions field support
      operationId: devices_update
      parameters:
      - description: A unique integer value identifying this device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyDevice'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyDevice'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - devices
  /api/devices/{id}/permissions/:
    get:
      description: |-
        Get the object-level permissions for this resource. Will return
        user permissions and user group permissions separately. User permissions
         will not include those derived from user group membership.
      operationId: devices_permissions_retrieve
      parameters:
      - description: A unique integer value identifying this device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                FullPermissionsForAUserAndAUserGroup:
                  summary: Full permissions example
                  value:
                    users:
                      user1:
                      - view
                      - change
                      - add
                      - delete
                    user_groups:
                      Team 2:
                      - view
                      - change
                      - add
                      - delete
              schema:
                $ref: '#/components/schemas/ObjectPermissions'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - devices
    patch:
      description: |-
        Partially update the object-level permissions for this resource.
        Can omit top-level fields to leave unchanged.
      operationId: devices_permissions_partial_update
      parameters:
      - description: A unique integer value identifying this device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              FullPermissionsForAUserAndAUserGroup:
                summary: Full permissions example
                value:
                  users:
                    user1:
                    - view
                    - change
                    - add
                    - delete
                  user_groups:
                    Team 2:
                    - view
                    - change
                    - add
                    - delete
            schema:
              $ref: '#/components/schemas/PatchedObjectPermissions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedObjectPermissions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedObjectPermissions'
      responses:
        "200":
          content:
            application/json:
              examples:
                FullPermissionsForAUserAndAUserGroup:
                  summary: Full permissions example
                  value:
                    users:
                      user1:
                      - view
                      - change
                      - add
                      - delete
                    user_groups:
                      Team 2:
                      - view
                      - change
                      - add
                      - delete
              schema:
                $ref: '#/components/schemas/ObjectPermissions'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - devices
    put:
      description: Update the object-level permissions for this resource.
      operationId: devices_permissions_update
      parameters:
      - description: A unique integer value identifying this device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              FullPermissionsForAUserAndAUserGroup:
                summary: Full permissions example
                value:
                  users:
                    user1:
                    - view
                    - change
                    - add
                    - delete
                  user_groups:
                    Team 2:
                    - view
                    - change
                    - add
                    - delete
            schema:
              $ref: '#/components/schemas/ObjectPermissions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObjectPermissions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObjectPermissions'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                FullPermissionsForAUserAndAUserGroup:
                  summary: Full permissions example
                  value:
                    users:
                      user1:
                      - view
                      - change
                      - add
                      - delete
                    user_groups:
                      Team 2:
                      - view
                      - change
                      - add
                      - delete
              schema:
                $ref: '#/components/schemas/ObjectPermissions'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - devices
  /api/devices/{id}/release/:
    put:
      description: Release a device
      operationId: devices_release_update
      parameters:
      - description: A unique integer value identifying this device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceSerializerPublic'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - devices
  /api/devices/{id}/reserve/:
    put:
      description: Reserve a device
      operationId: devices_reserve_update
      parameters:
      - description: Additional information such as the jenkins job URL
        explode: true
        in: query
        name: details
        required: false
        schema:
          type: string
        style: form
      - description: A unique integer value identifying this device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceSerializerPublic'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - devices
  /api/devices/list_my/:
    get:
      description: Get devices owned by authenticated user
      operationId: devices_list_my_list
      parameters:
      - explode: true
        in: query
        name: date_created
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: is_wstk
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: last_update
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: online
        required: false
        schema:
          type: boolean
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: part
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: part_family
        required: false
        schema:
          title: Part family name
          type: string
        style: form
      - explode: true
        in: query
        name: room
        required: false
        schema:
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: site
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sn_or_name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sn_or_name__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: uri
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: uri__isnull
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceSerializerPublicList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - devices
  /api/devices/search/:
    get:
      description: |-
        Search by any key-value pair in the device. Search includes nested key-value pairs in the metadata or any other fields in the serialized representation of the device.

        Comparison operations can be specified by doing: key__{oper}=value. Supported operations:

        eq: equals, neq: not equals, re: regular expression, gt: greater than, gte, greater than or equals, lt: less than, lte, less than or equals, in: contains
      operationId: devices_search_list
      parameters:
      - explode: true
        in: query
        name: date_created
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: is_wstk
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: last_update
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: online
        required: false
        schema:
          type: boolean
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: part
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: part_family
        required: false
        schema:
          title: Part family name
          type: string
        style: form
      - explode: true
        in: query
        name: room
        required: false
        schema:
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - examples:
          PartNoAndMetadata:
            description: Search by the part_no and by a key-value pair in a metadata
              field
            summary: part_no and metadata
            value: part_no=unknown&is_soc=True
          LastUpdateRegex:
            description: Search by a regular expression matches the last_update field
            summary: last_update regex
            value: last_update__re=^2021
          LocationDescContains:
            description: Search by whether a string is in the loc_desc field
            summary: location_desc contains
            value: location_desc__in=Boston
        explode: true
        in: query
        name: search_key_value_pairs
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: site
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sn_or_name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sn_or_name__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: uri
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: uri__isnull
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceSerializerPublicList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - devices
  /api/devices/set_offline/:
    post:
      description: |-
        Sets all devices offline which haven't been updated
        in the last hour
      operationId: devices_set_offline_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteOnlyDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WriteOnlyDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WriteOnlyDevice'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteOnlyDevice'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - devices
  /api/groups/:
    get:
      description: Viewset for DeviceGroup model
      operationId: groups_list
      parameters:
      - explode: true
        in: query
        name: devices
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceGroupList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - groups
    post:
      description: Viewset for DeviceGroup model
      operationId: groups_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceGroupSerializerWithDevicePk'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceGroupSerializerWithDevicePk'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceGroupSerializerWithDevicePk'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroupSerializerWithDevicePk'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - groups
  /api/groups/{group_name}/release_by_name/:
    put:
      operationId: groups_release_by_name_update
      parameters:
      - explode: false
        in: path
        name: group_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroup'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - groups
  /api/groups/{group_name}/reserve_by_name/:
    put:
      operationId: groups_reserve_by_name_update
      parameters:
      - description: Additional information such as the jenkins job URL
        explode: true
        in: query
        name: details
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: group_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroup'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - groups
  /api/groups/{id}/:
    delete:
      description: Viewset for DeviceGroup model
      operationId: groups_destroy
      parameters:
      - description: A unique integer value identifying this device group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - groups
    get:
      description: Viewset for DeviceGroup model
      operationId: groups_retrieve
      parameters:
      - description: A unique integer value identifying this device group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroup'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - groups
    patch:
      description: Viewset for DeviceGroup model
      operationId: groups_partial_update
      parameters:
      - description: A unique integer value identifying this device group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDeviceGroupSerializerWithDevicePk'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDeviceGroupSerializerWithDevicePk'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDeviceGroupSerializerWithDevicePk'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroupSerializerWithDevicePk'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - groups
    put:
      description: Viewset for DeviceGroup model
      operationId: groups_update
      parameters:
      - description: A unique integer value identifying this device group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceGroupSerializerWithDevicePk'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceGroupSerializerWithDevicePk'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceGroupSerializerWithDevicePk'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroupSerializerWithDevicePk'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - groups
  /api/groups/{id}/permissions/:
    get:
      description: |-
        Get the object-level permissions for this resource. Will return
        user permissions and user group permissions separately. User permissions
         will not include those derived from user group membership.
      operationId: groups_permissions_retrieve
      parameters:
      - description: A unique integer value identifying this device group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                FullPermissionsForAUserAndAUserGroup:
                  summary: Full permissions example
                  value:
                    users:
                      user1:
                      - view
                      - change
                      - add
                      - delete
                    user_groups:
                      Team 2:
                      - view
                      - change
                      - add
                      - delete
              schema:
                $ref: '#/components/schemas/ObjectPermissions'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - groups
    patch:
      description: |-
        Partially update the object-level permissions for this resource.
        Can omit top-level fields to leave unchanged.
      operationId: groups_permissions_partial_update
      parameters:
      - description: A unique integer value identifying this device group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              FullPermissionsForAUserAndAUserGroup:
                summary: Full permissions example
                value:
                  users:
                    user1:
                    - view
                    - change
                    - add
                    - delete
                  user_groups:
                    Team 2:
                    - view
                    - change
                    - add
                    - delete
            schema:
              $ref: '#/components/schemas/PatchedObjectPermissions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedObjectPermissions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedObjectPermissions'
      responses:
        "200":
          content:
            application/json:
              examples:
                FullPermissionsForAUserAndAUserGroup:
                  summary: Full permissions example
                  value:
                    users:
                      user1:
                      - view
                      - change
                      - add
                      - delete
                    user_groups:
                      Team 2:
                      - view
                      - change
                      - add
                      - delete
              schema:
                $ref: '#/components/schemas/ObjectPermissions'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - groups
    put:
      description: Update the object-level permissions for this resource.
      operationId: groups_permissions_update
      parameters:
      - description: A unique integer value identifying this device group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              FullPermissionsForAUserAndAUserGroup:
                summary: Full permissions example
                value:
                  users:
                    user1:
                    - view
                    - change
                    - add
                    - delete
                  user_groups:
                    Team 2:
                    - view
                    - change
                    - add
                    - delete
            schema:
              $ref: '#/components/schemas/ObjectPermissions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObjectPermissions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObjectPermissions'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                FullPermissionsForAUserAndAUserGroup:
                  summary: Full permissions example
                  value:
                    users:
                      user1:
                      - view
                      - change
                      - add
                      - delete
                    user_groups:
                      Team 2:
                      - view
                      - change
                      - add
                      - delete
              schema:
                $ref: '#/components/schemas/ObjectPermissions'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - groups
  /api/groups/{id}/release/:
    put:
      description: Viewset for DeviceGroup model
      operationId: groups_release_update
      parameters:
      - description: A unique integer value identifying this device group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroup'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - groups
  /api/groups/{id}/reserve/:
    put:
      description: Viewset for DeviceGroup model
      operationId: groups_reserve_update
      parameters:
      - description: Additional information such as the jenkins job URL
        explode: true
        in: query
        name: details
        required: false
        schema:
          type: string
        style: form
      - description: A unique integer value identifying this device group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroup'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - groups
  /api/groups/available/:
    get:
      description: Viewset for DeviceGroup model
      operationId: groups_available_list
      parameters:
      - explode: true
        in: query
        name: devices
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceGroupList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - groups
  /api/groups/create-with-devices:
    post:
      description: Create or update with permissions field support
      operationId: groups_create_with_devices_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NestedDeviceGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NestedDeviceGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NestedDeviceGroup'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroup'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - groups
  /api/groups/my/:
    get:
      description: Viewset for DeviceGroup model
      operationId: groups_my_list
      parameters:
      - explode: true
        in: query
        name: devices
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceGroupList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - groups
  /api/labels/:
    get:
      description: Viewset for DeviceGroup model
      operationId: labels_list
      parameters:
      - explode: true
        in: query
        name: device_groups
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLabelList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - labels
    post:
      description: Viewset for DeviceGroup model
      operationId: labels_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelSerializerWithPermissions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LabelSerializerWithPermissions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LabelSerializerWithPermissions'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelSerializerWithPermissions'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - labels
  /api/labels/{id}/:
    delete:
      description: Viewset for DeviceGroup model
      operationId: labels_destroy
      parameters:
      - description: A unique integer value identifying this device group label.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - labels
    get:
      description: Viewset for DeviceGroup model
      operationId: labels_retrieve
      parameters:
      - description: A unique integer value identifying this device group label.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - labels
    patch:
      description: Viewset for DeviceGroup model
      operationId: labels_partial_update
      parameters:
      - description: A unique integer value identifying this device group label.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLabelSerializerWithPermissions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLabelSerializerWithPermissions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLabelSerializerWithPermissions'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelSerializerWithPermissions'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - labels
    put:
      description: Viewset for DeviceGroup model
      operationId: labels_update
      parameters:
      - description: A unique integer value identifying this device group label.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelSerializerWithPermissions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LabelSerializerWithPermissions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LabelSerializerWithPermissions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelSerializerWithPermissions'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - labels
  /api/labels/{id}/permissions/:
    get:
      description: |-
        Get the object-level permissions for this resource. Will return
        user permissions and user group permissions separately. User permissions
         will not include those derived from user group membership.
      operationId: labels_permissions_retrieve
      parameters:
      - description: A unique integer value identifying this device group label.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                FullPermissionsForAUserAndAUserGroup:
                  summary: Full permissions example
                  value:
                    users:
                      user1:
                      - view
                      - change
                      - add
                      - delete
                    user_groups:
                      Team 2:
                      - view
                      - change
                      - add
                      - delete
              schema:
                $ref: '#/components/schemas/ObjectPermissions'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - labels
    patch:
      description: |-
        Partially update the object-level permissions for this resource.
        Can omit top-level fields to leave unchanged.
      operationId: labels_permissions_partial_update
      parameters:
      - description: A unique integer value identifying this device group label.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              FullPermissionsForAUserAndAUserGroup:
                summary: Full permissions example
                value:
                  users:
                    user1:
                    - view
                    - change
                    - add
                    - delete
                  user_groups:
                    Team 2:
                    - view
                    - change
                    - add
                    - delete
            schema:
              $ref: '#/components/schemas/PatchedObjectPermissions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedObjectPermissions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedObjectPermissions'
      responses:
        "200":
          content:
            application/json:
              examples:
                FullPermissionsForAUserAndAUserGroup:
                  summary: Full permissions example
                  value:
                    users:
                      user1:
                      - view
                      - change
                      - add
                      - delete
                    user_groups:
                      Team 2:
                      - view
                      - change
                      - add
                      - delete
              schema:
                $ref: '#/components/schemas/ObjectPermissions'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - labels
    put:
      description: Update the object-level permissions for this resource.
      operationId: labels_permissions_update
      parameters:
      - description: A unique integer value identifying this device group label.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              FullPermissionsForAUserAndAUserGroup:
                summary: Full permissions example
                value:
                  users:
                    user1:
                    - view
                    - change
                    - add
                    - delete
                  user_groups:
                    Team 2:
                    - view
                    - change
                    - add
                    - delete
            schema:
              $ref: '#/components/schemas/ObjectPermissions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObjectPermissions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObjectPermissions'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                FullPermissionsForAUserAndAUserGroup:
                  summary: Full permissions example
                  value:
                    users:
                      user1:
                      - view
                      - change
                      - add
                      - delete
                    user_groups:
                      Team 2:
                      - view
                      - change
                      - add
                      - delete
              schema:
                $ref: '#/components/schemas/ObjectPermissions'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - labels
  /api/labels/{id}/reserve_any/:
    put:
      description: Viewset for DeviceGroup model
      operationId: labels_reserve_any_update
      parameters:
      - description: Additional information such as the jenkins job URL
        explode: true
        in: query
        name: details
        required: false
        schema:
          type: string
        style: form
      - description: A unique integer value identifying this device group label.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceGroup'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - labels
  /api/logs/:
    get:
      operationId: logs_list
      parameters:
      - explode: true
        in: query
        name: caused_by
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: date_after
        required: false
        schema:
          format: date
          type: string
        style: form
      - explode: true
        in: query
        name: date_before
        required: false
        schema:
          format: date
          type: string
        style: form
      - explode: true
        in: query
        name: datetime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: details
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: device
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: device__sn_or_name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: device_group
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: device_group__name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: device_group_label
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: event
        required: false
        schema:
          enum:
          - CR
          - ERR
          - MOD
          - "OFF"
          - "ON"
          - QUE
          - REL
          - RES
          type: string
        style: form
      - description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
          \ only."
        explode: true
        in: query
        name: owner
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLogList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - logs
  /api/logs/{id}:
    delete:
      operationId: logs_destroy
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - logs
  /api/logs/{id}/:
    get:
      operationId: logs_retrieve
      parameters:
      - description: A unique integer value identifying this log.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - logs
  /api/part-families/:
    get:
      operationId: part_families_list
      parameters:
      - explode: true
        in: query
        name: description
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: regex_pattern
        required: false
        schema:
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPartFamilyList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - part-families
    post:
      operationId: part_families_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartFamily'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartFamily'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartFamily'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartFamily'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - part-families
  /api/part-families/{part_family_pk}/parts/:
    get:
      operationId: part_families_parts_list
      parameters:
      - explode: true
        in: query
        name: board_no
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: chip_no
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: part_family
        required: false
        schema:
          title: Part family name
          type: string
        style: form
      - explode: false
        in: path
        name: part_family_pk
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: part_no
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: revision
        required: false
        schema:
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: variant
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPartList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - part-families
    post:
      operationId: part_families_parts_create
      parameters:
      - explode: false
        in: path
        name: part_family_pk
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Part'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Part'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Part'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Part'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - part-families
  /api/part-families/{part_family_pk}/parts/{id}/:
    delete:
      operationId: part_families_parts_destroy
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: part_family_pk
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - part-families
    get:
      operationId: part_families_parts_retrieve
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: part_family_pk
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Part'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - part-families
    patch:
      operationId: part_families_parts_partial_update
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: part_family_pk
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPart'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Part'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - part-families
    put:
      operationId: part_families_parts_update
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: part_family_pk
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Part'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Part'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Part'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Part'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - part-families
  /api/part-families/{name}/:
    delete:
      operationId: part_families_destroy
      parameters:
      - description: A unique value identifying this part family.
        explode: false
        in: path
        name: name
        required: true
        schema:
          title: Part family name
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - part-families
    get:
      operationId: part_families_retrieve
      parameters:
      - description: A unique value identifying this part family.
        explode: false
        in: path
        name: name
        required: true
        schema:
          title: Part family name
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartFamily'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - part-families
    patch:
      operationId: part_families_partial_update
      parameters:
      - description: A unique value identifying this part family.
        explode: false
        in: path
        name: name
        required: true
        schema:
          title: Part family name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPartFamily'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPartFamily'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPartFamily'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartFamily'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - part-families
    put:
      operationId: part_families_update
      parameters:
      - description: A unique value identifying this part family.
        explode: false
        in: path
        name: name
        required: true
        schema:
          title: Part family name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartFamily'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartFamily'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartFamily'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartFamily'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - part-families
  /api/parts/:
    get:
      operationId: parts_list
      parameters:
      - explode: true
        in: query
        name: board_no
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: chip_no
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: part_family
        required: false
        schema:
          title: Part family name
          type: string
        style: form
      - explode: true
        in: query
        name: part_no
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: revision
        required: false
        schema:
          type: string
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: variant
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPartList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - parts
  /api/parts/{part_no}/:
    get:
      operationId: parts_retrieve
      parameters:
      - description: A unique value identifying this part.
        explode: false
        in: path
        name: part_no
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Part'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - parts
  /api/permissions/groups/:
    get:
      operationId: permissions_groups_list
      parameters:
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPermissionGroupList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
    post:
      operationId: permissions_groups_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PermissionGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PermissionGroup'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroup'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
  /api/permissions/groups/{group_name}/device_groups/:
    get:
      operationId: permissions_groups_device_groups_list
      parameters:
      - explode: false
        in: path
        name: group_name
        required: true
        schema:
          type: string
        style: simple
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Permission types. Only entities with all permissions defined
          here will be fetched. Defaults to all permissions.
        examples:
          EntitiesWithViewPermissions:
            summary: Entities with view permissions
            value: view
          EntitiesWithViewAndChangePermissions:
            summary: Entities with view and change permissions
            value: "view,change"
        explode: true
        in: query
        name: perms
        required: false
        schema:
          default: "view,change,add,delete"
          enum:
          - add
          - "add,delete"
          - change
          - "change,add"
          - "change,add,delete"
          - "change,delete"
          - delete
          - view
          - "view,add"
          - "view,add,delete"
          - "view,change"
          - "view,change,add"
          - "view,change,add,delete"
          - "view,change,delete"
          - "view,delete"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceGroupList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
    post:
      operationId: permissions_groups_device_groups_create
      parameters:
      - explode: false
        in: path
        name: group_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ResourcePermissions'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/ResourcePermissions'
              type: array
          multipart/form-data:
            schema:
              items:
                $ref: '#/components/schemas/ResourcePermissions'
              type: array
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroup'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
  /api/permissions/groups/{group_name}/device_groups/{id}/:
    delete:
      operationId: permissions_groups_device_groups_destroy
      parameters:
      - explode: false
        in: path
        name: group_name
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this device group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
    patch:
      operationId: permissions_groups_device_groups_partial_update
      parameters:
      - explode: false
        in: path
        name: group_name
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this device group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedResourcePermissions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedResourcePermissions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedResourcePermissions'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePermissions'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
    put:
      operationId: permissions_groups_device_groups_update
      parameters:
      - explode: false
        in: path
        name: group_name
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this device group.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePermissions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourcePermissions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourcePermissions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroup'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
  /api/permissions/groups/{group_name}/devices/:
    get:
      operationId: permissions_groups_devices_list
      parameters:
      - explode: false
        in: path
        name: group_name
        required: true
        schema:
          type: string
        style: simple
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Permission types. Only entities with all permissions defined
          here will be fetched. Defaults to all permissions.
        examples:
          EntitiesWithViewPermissions:
            summary: Entities with view permissions
            value: view
          EntitiesWithViewAndChangePermissions:
            summary: Entities with view and change permissions
            value: "view,change"
        explode: true
        in: query
        name: perms
        required: false
        schema:
          default: "view,change,add,delete"
          enum:
          - add
          - "add,delete"
          - change
          - "change,add"
          - "change,add,delete"
          - "change,delete"
          - delete
          - view
          - "view,add"
          - "view,add,delete"
          - "view,change"
          - "view,change,add"
          - "view,change,add,delete"
          - "view,change,delete"
          - "view,delete"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceSerializerPublicList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
    post:
      operationId: permissions_groups_devices_create
      parameters:
      - explode: false
        in: path
        name: group_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ResourcePermissions'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/ResourcePermissions'
              type: array
          multipart/form-data:
            schema:
              items:
                $ref: '#/components/schemas/ResourcePermissions'
              type: array
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroup'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
  /api/permissions/groups/{group_name}/devices/{id}/:
    delete:
      operationId: permissions_groups_devices_destroy
      parameters:
      - explode: false
        in: path
        name: group_name
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
    patch:
      operationId: permissions_groups_devices_partial_update
      parameters:
      - explode: false
        in: path
        name: group_name
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedResourcePermissions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedResourcePermissions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedResourcePermissions'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePermissions'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
    put:
      operationId: permissions_groups_devices_update
      parameters:
      - explode: false
        in: path
        name: group_name
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this device.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePermissions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourcePermissions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourcePermissions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroup'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
  /api/permissions/groups/{group_name}/labels/:
    get:
      operationId: permissions_groups_labels_list
      parameters:
      - explode: false
        in: path
        name: group_name
        required: true
        schema:
          type: string
        style: simple
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Permission types. Only entities with all permissions defined
          here will be fetched. Defaults to all permissions.
        examples:
          EntitiesWithViewPermissions:
            summary: Entities with view permissions
            value: view
          EntitiesWithViewAndChangePermissions:
            summary: Entities with view and change permissions
            value: "view,change"
        explode: true
        in: query
        name: perms
        required: false
        schema:
          default: "view,change,add,delete"
          enum:
          - add
          - "add,delete"
          - change
          - "change,add"
          - "change,add,delete"
          - "change,delete"
          - delete
          - view
          - "view,add"
          - "view,add,delete"
          - "view,change"
          - "view,change,add"
          - "view,change,add,delete"
          - "view,change,delete"
          - "view,delete"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLabelList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
    post:
      operationId: permissions_groups_labels_create
      parameters:
      - explode: false
        in: path
        name: group_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ResourcePermissions'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/ResourcePermissions'
              type: array
          multipart/form-data:
            schema:
              items:
                $ref: '#/components/schemas/ResourcePermissions'
              type: array
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroup'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
  /api/permissions/groups/{group_name}/labels/{id}/:
    delete:
      operationId: permissions_groups_labels_destroy
      parameters:
      - explode: false
        in: path
        name: group_name
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this device group label.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
    patch:
      operationId: permissions_groups_labels_partial_update
      parameters:
      - explode: false
        in: path
        name: group_name
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this device group label.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedResourcePermissions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedResourcePermissions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedResourcePermissions'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePermissions'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
    put:
      operationId: permissions_groups_labels_update
      parameters:
      - explode: false
        in: path
        name: group_name
        required: true
        schema:
          type: string
        style: simple
      - description: A unique integer value identifying this device group label.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePermissions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourcePermissions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourcePermissions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroup'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
  /api/permissions/groups/{group_name}/users/:
    post:
      operationId: permissions_groups_users_create
      parameters:
      - explode: false
        in: path
        name: group_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/User'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/User'
              type: array
          multipart/form-data:
            schema:
              items:
                $ref: '#/components/schemas/User'
              type: array
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroup'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
  /api/permissions/groups/{group_name}/users/{username}/:
    delete:
      operationId: permissions_groups_users_destroy
      parameters:
      - explode: false
        in: path
        name: group_name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: username
        required: true
        schema:
          description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
            \ only."
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
  /api/permissions/groups/{name}/:
    delete:
      operationId: permissions_groups_destroy
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
    get:
      operationId: permissions_groups_retrieve
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroup'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
    patch:
      operationId: permissions_groups_partial_update
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPermissionGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPermissionGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPermissionGroup'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroup'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
    put:
      operationId: permissions_groups_update
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PermissionGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PermissionGroup'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroup'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - permissions
  /api/reservations/:
    get:
      operationId: reservations_list
      parameters:
      - explode: true
        in: query
        name: a_device_groups
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: a_devices
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: details
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: owner
        required: false
        schema:
          type: integer
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: r_device_group_labels
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: r_device_groups
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: r_devices
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: t_completed
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_completed__after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_completed__before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_completed__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: t_lease_expires
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_lease_expires__after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_lease_expires__before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_lease_expires__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: t_requested
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_requested__after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_requested__before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_satisfied
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_satisfied__after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_satisfied__before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_satisfied__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: use_watchdog
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReservationSessionSerializerReadOnlyList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - reservations
    post:
      operationId: reservations_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReservationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReservationRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationSessionSerializerReadOnly'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - reservations
  /api/reservations/{id}/:
    get:
      operationId: reservations_retrieve
      parameters:
      - description: A UUID string identifying this reservation session.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationSessionSerializerReadOnly'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - reservations
    put:
      description: Check queue status or renew lease if reservation is ongoing
      operationId: reservations_update
      parameters:
      - description: A UUID string identifying this reservation session.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationSessionSerializerReadOnly'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - reservations
  /api/reservations/{id}/cancel/:
    put:
      description: Release the reservation
      operationId: reservations_cancel_update
      parameters:
      - description: A UUID string identifying this reservation session.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationSessionSerializerReadOnly'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - reservations
  /api/reservations/{id}/metadata/:
    patch:
      description: |-
        Update the reservation metadata. Use PUT to replace the existing data
        entirely and PATCH to update without deleting existing values.
      operationId: reservations_metadata_partial_update
      parameters:
      - description: A UUID string identifying this reservation session.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: {}
              type: object
          application/x-www-form-urlencoded:
            schema:
              additionalProperties: {}
              type: object
          multipart/form-data:
            schema:
              additionalProperties: {}
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationSessionSerializerReadOnly'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - reservations
    put:
      description: |-
        Update the reservation metadata. Use PUT to replace the existing data
        entirely and PATCH to update without deleting existing values.
      operationId: reservations_metadata_update
      parameters:
      - description: A UUID string identifying this reservation session.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: {}
              type: object
          application/x-www-form-urlencoded:
            schema:
              additionalProperties: {}
              type: object
          multipart/form-data:
            schema:
              additionalProperties: {}
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationSessionSerializerReadOnly'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - reservations
  /api/reservations/{id}/release/:
    put:
      description: Release the reservation
      operationId: reservations_release_update
      parameters:
      - description: A UUID string identifying this reservation session.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationSessionSerializerReadOnly'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - reservations
  /api/reservations/actionable/:
    get:
      description: |-
        Returns all reservations that are queued, holding resources or
        recently expired
      operationId: reservations_actionable_list
      parameters:
      - explode: true
        in: query
        name: a_device_groups
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: a_devices
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: details
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Filter out reservations that expired before the specified datetime.
          Defaults to 24 hours prior.
        explode: true
        in: query
        name: max_history
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: owner
        required: false
        schema:
          type: integer
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: r_device_group_labels
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: r_device_groups
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: r_devices
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: t_completed
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_completed__after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_completed__before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_completed__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: t_lease_expires
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_lease_expires__after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_lease_expires__before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_lease_expires__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: t_requested
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_requested__after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_requested__before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_satisfied
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_satisfied__after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_satisfied__before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_satisfied__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: use_watchdog
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReservationSessionSerializerReadOnlyList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - reservations
  /api/reservations/active/:
    get:
      description: "Returns all reservations that currently hold resources for the\
        \ user\n        "
      operationId: reservations_active_list
      parameters:
      - explode: true
        in: query
        name: a_device_groups
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: a_devices
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: details
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: owner
        required: false
        schema:
          type: integer
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: r_device_group_labels
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: r_device_groups
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: r_devices
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: t_completed
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_completed__after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_completed__before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_completed__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: t_lease_expires
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_lease_expires__after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_lease_expires__before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_lease_expires__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: t_requested
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_requested__after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_requested__before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_satisfied
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_satisfied__after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_satisfied__before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: t_satisfied__isnull
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: use_watchdog
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReservationSessionSerializerReadOnlyList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - reservations
  /api/rooms/:
    get:
      operationId: rooms_list
      parameters:
      - explode: true
        in: query
        name: description
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: site
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoomList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - rooms
  /api/rooms/{name}/:
    get:
      operationId: rooms_retrieve
      parameters:
      - description: A unique value identifying this room.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - rooms
  /api/sites/:
    get:
      operationId: sites_list
      parameters:
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSiteList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - sites
    post:
      operationId: sites_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Site'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Site'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - sites
  /api/sites/{name}/:
    delete:
      operationId: sites_destroy
      parameters:
      - description: A unique value identifying this site.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - sites
    get:
      operationId: sites_retrieve
      parameters:
      - description: A unique value identifying this site.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - sites
    patch:
      operationId: sites_partial_update
      parameters:
      - description: A unique value identifying this site.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSite'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - sites
    put:
      operationId: sites_update
      parameters:
      - description: A unique value identifying this site.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Site'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Site'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - sites
  /api/sites/{site_pk}/rooms/:
    get:
      operationId: sites_rooms_list
      parameters:
      - explode: true
        in: query
        name: description
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: site
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: site_pk
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoomList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - sites
    post:
      operationId: sites_rooms_create
      parameters:
      - explode: false
        in: path
        name: site_pk
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Room'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Room'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - sites
  /api/sites/{site_pk}/rooms/{id}/:
    delete:
      operationId: sites_rooms_destroy
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: site_pk
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - sites
    get:
      operationId: sites_rooms_retrieve
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: site_pk
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - sites
    patch:
      operationId: sites_rooms_partial_update
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: site_pk
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - sites
    put:
      operationId: sites_rooms_update
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: site_pk
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Room'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Room'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - sites
  /api/user/:
    get:
      operationId: user_list
      parameters:
      - explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: first_name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: last_name
        required: false
        schema:
          type: string
        style: form
      - description: Which field to use when ordering the results.
        explode: true
        in: query
        name: ordering
        required: false
        schema:
          type: string
        style: form
      - description: A page number within the paginated result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user_group
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLoggedInUserList'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - user
    post:
      operationId: user_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoggedInUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoggedInUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoggedInUser'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggedInUser'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - user
  /api/user/{username}/:
    delete:
      operationId: user_destroy
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
            \ only."
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - user
    get:
      operationId: user_retrieve
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
            \ only."
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggedInUser'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - user
    patch:
      operationId: user_partial_update
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
            \ only."
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLoggedInUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLoggedInUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLoggedInUser'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggedInUser'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - user
    put:
      operationId: user_update
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
            \ only."
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoggedInUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoggedInUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoggedInUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggedInUser'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - user
  /api/user/current/:
    get:
      operationId: user_current_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggedInUser'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - user
  /api/user/current/token/:
    get:
      description: "Gets the current user's API token. Generates one if none available.\n\
        \        "
      operationId: user_current_token_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - user
    post:
      description: |-
        Generates new API token for the current user. The old tokens become
        invalid.
      operationId: user_current_token_create
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      tags:
      - user
  /callback/:
    get:
      description: |-
        Uses the auth token to get user data to store in the session
        and create a Django Auth user
      operationId: callback_retrieve
      responses:
        "200":
          description: No response body
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      tags:
      - callback
  /schema/download:
    get:
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      operationId: schema_download_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - yaml
          type: string
        style: form
      - explode: true
        in: query
        name: lang
        required: false
        schema:
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.oai.openapi:
              schema:
                additionalProperties: {}
                type: object
            application/yaml:
              schema:
                additionalProperties: {}
                type: object
            application/vnd.oai.openapi+json:
              schema:
                additionalProperties: {}
                type: object
            application/json:
              schema:
                additionalProperties: {}
                type: object
          description: ""
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      tags:
      - schema
  /signin/:
    get:
      description: Gets the auth flow and redirects to the authority uri
      operationId: signin_retrieve
      responses:
        "200":
          description: No response body
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      tags:
      - signin
  /signout/:
    get:
      description: Logs the user out of the session
      operationId: signout_retrieve
      responses:
        "200":
          description: No response body
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      tags:
      - signout
components:
  schemas:
    AuthToken:
      example:
        password: password
        username: username
        token: token
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          readOnly: true
          type: string
      required:
      - password
      - token
      - username
      type: object
    DeviceGroup:
      example:
        is_reserved: true
        metadata:
          key: ""
        devices:
        - metadata:
            key: ""
          is_wstk: true
          part:
            part_no: part_no
            metadata:
              key: ""
            board_no: board_no
            variant: variant
            chip_no: chip_no
            part_family: ""
            revision: revision
          online: true
          location: 1
          id: 6
          sn_or_name: sn_or_name
          uri: uri
        - metadata:
            key: ""
          is_wstk: true
          part:
            part_no: part_no
            metadata:
              key: ""
            board_no: board_no
            variant: variant
            chip_no: chip_no
            part_family: ""
            revision: revision
          online: true
          location: 1
          id: 6
          sn_or_name: sn_or_name
          uri: uri
        name: name
        id: 0
      properties:
        id:
          readOnly: true
          type: integer
        devices:
          items:
            $ref: '#/components/schemas/LightDevice'
          readOnly: true
          type: array
        is_reserved:
          nullable: true
          readOnly: true
          type: boolean
        name:
          maxLength: 100
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        metadata:
          additionalProperties: {}
          nullable: true
          type: object
      required:
      - devices
      - id
      - is_reserved
      - name
      type: object
    DeviceGroupSerializerWithDevicePk:
      example:
        is_reserved: true
        metadata:
          key: ""
        devices:
        - 6
        - 6
        permission_groups:
        - permission_groups
        - permission_groups
        name: name
        id: 0
      properties:
        id:
          readOnly: true
          type: integer
        devices:
          items:
            type: integer
          type: array
        is_reserved:
          nullable: true
          readOnly: true
          type: boolean
        permission_groups:
          items:
            type: string
          type: array
          writeOnly: true
        name:
          maxLength: 100
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        metadata:
          additionalProperties: {}
          nullable: true
          type: object
      required:
      - id
      - is_reserved
      - name
      type: object
    DeviceSerializerPublic:
      description: Serializes Device querysets to JSON
      example:
        is_reserved: true
        metadata:
          key: ""
        is_wstk: true
        date_created: 2000-01-23T04:56:07.000+00:00
        part:
          part_no: part_no
          metadata:
            key: ""
          board_no: board_no
          variant: variant
          chip_no: chip_no
          part_family: ""
          revision: revision
        last_update: 2000-01-23T04:56:07.000+00:00
        online: true
        id: 0
        loc_desc: loc_desc
        sn_or_name: sn_or_name
        uri: uri
      properties:
        id:
          readOnly: true
          type: integer
        part:
          $ref: '#/components/schemas/Part'
        loc_desc:
          readOnly: true
          type: string
        is_reserved:
          nullable: true
          readOnly: true
          type: boolean
        sn_or_name:
          maxLength: 255
          nullable: true
          title: Device name or serial number
          type: string
        is_wstk:
          title: If the device is a WSTK
          type: boolean
        uri:
          maxLength: 255
          nullable: true
          type: string
        online:
          title: Is online
          type: boolean
        last_update:
          format: date-time
          readOnly: true
          type: string
        date_created:
          format: date-time
          readOnly: true
          type: string
        metadata:
          additionalProperties: {}
          title: Additional data
          type: object
      required:
      - date_created
      - id
      - is_reserved
      - last_update
      - loc_desc
      - part
      type: object
    EventEnum:
      enum:
      - RES
      - REL
      - "OFF"
      - "ON"
      - CR
      - MOD
      - QUE
      - ERR
      type: string
    Label:
      example:
        metadata:
          key: ""
        device_groups:
        - 6
        - 6
        name: name
        id: 0
      properties:
        id:
          readOnly: true
          type: integer
        device_groups:
          items:
            type: integer
          type: array
        name:
          maxLength: 100
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        metadata:
          additionalProperties: {}
          nullable: true
          type: object
      required:
      - device_groups
      - id
      - name
      type: object
    LabelSerializerWithPermissions:
      example:
        metadata:
          key: ""
        device_groups:
        - 6
        - 6
        permission_groups:
        - permission_groups
        - permission_groups
        name: name
        id: 0
      properties:
        id:
          readOnly: true
          type: integer
        device_groups:
          items:
            type: integer
          type: array
        permission_groups:
          items:
            type: string
          type: array
          writeOnly: true
        name:
          maxLength: 100
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        metadata:
          additionalProperties: {}
          nullable: true
          type: object
      required:
      - device_groups
      - id
      - name
      type: object
    LightDevice:
      description: A lightweight device representation used in the DeviceGroup serializer
      example:
        metadata:
          key: ""
        is_wstk: true
        part:
          part_no: part_no
          metadata:
            key: ""
          board_no: board_no
          variant: variant
          chip_no: chip_no
          part_family: ""
          revision: revision
        online: true
        location: 1
        id: 6
        sn_or_name: sn_or_name
        uri: uri
      properties:
        id:
          readOnly: true
          type: integer
        sn_or_name:
          maxLength: 255
          nullable: true
          title: Device name or serial number
          type: string
        uri:
          maxLength: 255
          nullable: true
          type: string
        is_wstk:
          title: If the device is a WSTK
          type: boolean
        metadata:
          additionalProperties: {}
          title: Additional data
          type: object
        online:
          title: Is online
          type: boolean
        part:
          $ref: '#/components/schemas/Part'
        location:
          type: integer
      required:
      - id
      - location
      - part
      type: object
    Location:
      description: Serializer for the Location model
      example:
        metadata:
          key: ""
        description: description
        id: 0
        device: 6
        room: ""
      properties:
        id:
          readOnly: true
          type: integer
        room:
          allOf:
          - $ref: '#/components/schemas/Room'
          readOnly: true
        description:
          maxLength: 255
          type: string
        metadata:
          additionalProperties: {}
          title: Additional data
          type: object
        device:
          title: Physical location of the device
          type: integer
      required:
      - device
      - id
      - room
      type: object
    LocationSerializerWriteOnly:
      description: Serializer for the Location model
      example:
        metadata:
          key: ""
        description: description
        id: 6
        room: room
      properties:
        id:
          readOnly: true
          type: integer
        room:
          type: string
        description:
          maxLength: 255
          type: string
        metadata:
          additionalProperties: {}
          title: Additional data
          type: object
      required:
      - id
      - room
      type: object
    Log:
      example:
        owner: owner
        datetime: 2000-01-23T04:56:07.000+00:00
        metadata:
          key: ""
        caused_by: 1
        device_group: https://openapi-generator.tech
        device_group_label: 6
        details: details
        id: 0
        event: null
        device: https://openapi-generator.tech
      properties:
        id:
          readOnly: true
          type: integer
        owner:
          readOnly: true
          type: string
        device:
          format: uri
          nullable: true
          readOnly: true
          type: string
        device_group:
          format: uri
          nullable: true
          readOnly: true
          type: string
        event:
          $ref: '#/components/schemas/EventEnum'
        datetime:
          format: date-time
          readOnly: true
          type: string
        details:
          maxLength: 255
          type: string
        metadata:
          additionalProperties: {}
          title: Additional data
          type: object
        device_group_label:
          nullable: true
          type: integer
        caused_by:
          nullable: true
          type: integer
      required:
      - datetime
      - device
      - device_group
      - event
      - id
      - owner
      type: object
    LoggedInUser:
      example:
        is_superuser: true
        is_staff: true
        last_name: last_name
        groups:
        - groups
        - groups
        first_name: first_name
        email: email
        username: username
      properties:
        username:
          description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
            \ only."
          maxLength: 150
          pattern: "^[\\w.@+-]+$"
          type: string
        email:
          format: email
          maxLength: 254
          title: Email address
          type: string
        first_name:
          maxLength: 150
          type: string
        last_name:
          maxLength: 150
          type: string
        is_staff:
          description: Designates whether the user can log into this admin site.
          title: Staff status
          type: boolean
        groups:
          items:
            type: string
          readOnly: true
          type: array
        is_superuser:
          description: Designates that this user has all permissions without explicitly
            assigning them.
          title: Superuser status
          type: boolean
      required:
      - groups
      - username
      type: object
    NestedDeviceGroup:
      example:
        metadata:
          key: ""
        devices:
        - metadata:
            key: ""
          date_created: 2000-01-23T04:56:07.000+00:00
          part: part
          permission_groups:
          - permission_groups
          - permission_groups
          uri: uri
          is_reserved: true
          is_wstk: true
          last_update: 2000-01-23T04:56:07.000+00:00
          online: true
          location:
            metadata:
              key: ""
            description: description
            id: 6
            room: room
          id: 0
          loc_desc: loc_desc
          sn_or_name: sn_or_name
        - metadata:
            key: ""
          date_created: 2000-01-23T04:56:07.000+00:00
          part: part
          permission_groups:
          - permission_groups
          - permission_groups
          uri: uri
          is_reserved: true
          is_wstk: true
          last_update: 2000-01-23T04:56:07.000+00:00
          online: true
          location:
            metadata:
              key: ""
            description: description
            id: 6
            room: room
          id: 0
          loc_desc: loc_desc
          sn_or_name: sn_or_name
        permission_groups:
        - permission_groups
        - permission_groups
        name: name
      properties:
        name:
          maxLength: 100
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        devices:
          items:
            $ref: '#/components/schemas/WriteOnlyDevice'
          type: array
        metadata:
          additionalProperties: {}
          nullable: true
          type: object
        permission_groups:
          items:
            type: string
          type: array
          writeOnly: true
      required:
      - name
      type: object
    ObjectPermissions:
      example:
        users:
          key: ""
        user_groups:
          key: ""
      properties:
        users:
          additionalProperties: {}
          type: object
        user_groups:
          additionalProperties: {}
          type: object
      required:
      - user_groups
      - users
      type: object
    PaginatedDeviceGroupList:
      example:
        next: http://api.example.org/accounts/?page=4
        previous: http://api.example.org/accounts/?page=2
        count: 123
        results:
        - is_reserved: true
          metadata:
            key: ""
          devices:
          - metadata:
              key: ""
            is_wstk: true
            part:
              part_no: part_no
              metadata:
                key: ""
              board_no: board_no
              variant: variant
              chip_no: chip_no
              part_family: ""
              revision: revision
            online: true
            location: 1
            id: 6
            sn_or_name: sn_or_name
            uri: uri
          - metadata:
              key: ""
            is_wstk: true
            part:
              part_no: part_no
              metadata:
                key: ""
              board_no: board_no
              variant: variant
              chip_no: chip_no
              part_family: ""
              revision: revision
            online: true
            location: 1
            id: 6
            sn_or_name: sn_or_name
            uri: uri
          name: name
          id: 0
        - is_reserved: true
          metadata:
            key: ""
          devices:
          - metadata:
              key: ""
            is_wstk: true
            part:
              part_no: part_no
              metadata:
                key: ""
              board_no: board_no
              variant: variant
              chip_no: chip_no
              part_family: ""
              revision: revision
            online: true
            location: 1
            id: 6
            sn_or_name: sn_or_name
            uri: uri
          - metadata:
              key: ""
            is_wstk: true
            part:
              part_no: part_no
              metadata:
                key: ""
              board_no: board_no
              variant: variant
              chip_no: chip_no
              part_family: ""
              revision: revision
            online: true
            location: 1
            id: 6
            sn_or_name: sn_or_name
            uri: uri
          name: name
          id: 0
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?page=4
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?page=2
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/DeviceGroup'
          type: array
      type: object
    PaginatedDeviceSerializerPublicList:
      example:
        next: http://api.example.org/accounts/?page=4
        previous: http://api.example.org/accounts/?page=2
        count: 123
        results:
        - is_reserved: true
          metadata:
            key: ""
          is_wstk: true
          date_created: 2000-01-23T04:56:07.000+00:00
          part:
            part_no: part_no
            metadata:
              key: ""
            board_no: board_no
            variant: variant
            chip_no: chip_no
            part_family: ""
            revision: revision
          last_update: 2000-01-23T04:56:07.000+00:00
          online: true
          id: 0
          loc_desc: loc_desc
          sn_or_name: sn_or_name
          uri: uri
        - is_reserved: true
          metadata:
            key: ""
          is_wstk: true
          date_created: 2000-01-23T04:56:07.000+00:00
          part:
            part_no: part_no
            metadata:
              key: ""
            board_no: board_no
            variant: variant
            chip_no: chip_no
            part_family: ""
            revision: revision
          last_update: 2000-01-23T04:56:07.000+00:00
          online: true
          id: 0
          loc_desc: loc_desc
          sn_or_name: sn_or_name
          uri: uri
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?page=4
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?page=2
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/DeviceSerializerPublic'
          type: array
      type: object
    PaginatedLabelList:
      example:
        next: http://api.example.org/accounts/?page=4
        previous: http://api.example.org/accounts/?page=2
        count: 123
        results:
        - metadata:
            key: ""
          device_groups:
          - 6
          - 6
          name: name
          id: 0
        - metadata:
            key: ""
          device_groups:
          - 6
          - 6
          name: name
          id: 0
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?page=4
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?page=2
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Label'
          type: array
      type: object
    PaginatedLogList:
      example:
        next: http://api.example.org/accounts/?page=4
        previous: http://api.example.org/accounts/?page=2
        count: 123
        results:
        - owner: owner
          datetime: 2000-01-23T04:56:07.000+00:00
          metadata:
            key: ""
          caused_by: 1
          device_group: https://openapi-generator.tech
          device_group_label: 6
          details: details
          id: 0
          event: null
          device: https://openapi-generator.tech
        - owner: owner
          datetime: 2000-01-23T04:56:07.000+00:00
          metadata:
            key: ""
          caused_by: 1
          device_group: https://openapi-generator.tech
          device_group_label: 6
          details: details
          id: 0
          event: null
          device: https://openapi-generator.tech
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?page=4
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?page=2
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Log'
          type: array
      type: object
    PaginatedLoggedInUserList:
      example:
        next: http://api.example.org/accounts/?page=4
        previous: http://api.example.org/accounts/?page=2
        count: 123
        results:
        - is_superuser: true
          is_staff: true
          last_name: last_name
          groups:
          - groups
          - groups
          first_name: first_name
          email: email
          username: username
        - is_superuser: true
          is_staff: true
          last_name: last_name
          groups:
          - groups
          - groups
          first_name: first_name
          email: email
          username: username
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?page=4
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?page=2
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/LoggedInUser'
          type: array
      type: object
    PaginatedPartFamilyList:
      example:
        next: http://api.example.org/accounts/?page=4
        previous: http://api.example.org/accounts/?page=2
        count: 123
        results:
        - regex_pattern: regex_pattern
          metadata:
            key: ""
          name: name
          description: description
        - regex_pattern: regex_pattern
          metadata:
            key: ""
          name: name
          description: description
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?page=4
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?page=2
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/PartFamily'
          type: array
      type: object
    PaginatedPartList:
      example:
        next: http://api.example.org/accounts/?page=4
        previous: http://api.example.org/accounts/?page=2
        count: 123
        results:
        - part_no: part_no
          metadata:
            key: ""
          board_no: board_no
          variant: variant
          chip_no: chip_no
          part_family: ""
          revision: revision
        - part_no: part_no
          metadata:
            key: ""
          board_no: board_no
          variant: variant
          chip_no: chip_no
          part_family: ""
          revision: revision
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?page=4
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?page=2
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Part'
          type: array
      type: object
    PaginatedPermissionGroupList:
      example:
        next: http://api.example.org/accounts/?page=4
        previous: http://api.example.org/accounts/?page=2
        count: 123
        results:
        - permissions:
          - permissions
          - permissions
          name: name
          id: 0
        - permissions:
          - permissions
          - permissions
          name: name
          id: 0
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?page=4
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?page=2
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/PermissionGroup'
          type: array
      type: object
    PaginatedReservationSessionSerializerReadOnlyList:
      example:
        next: http://api.example.org/accounts/?page=4
        previous: http://api.example.org/accounts/?page=2
        count: 123
        results:
        - owner: null
          t_completed: 2000-01-23T04:56:07.000+00:00
          metadata:
            key: ""
          a_device_groups:
          - 5
          - 5
          t_lease_expires: 2000-01-23T04:56:07.000+00:00
          a_devices:
          - 5
          - 5
          r_device_group_labels:
          - 1
          - 1
          use_watchdog: true
          t_satisfied: 2000-01-23T04:56:07.000+00:00
          r_devices:
          - 0
          - 0
          is_satisfied: true
          response_message: response_message
          details: details
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          t_requested: 2000-01-23T04:56:07.000+00:00
          r_device_groups:
          - 6
          - 6
          status: status
        - owner: null
          t_completed: 2000-01-23T04:56:07.000+00:00
          metadata:
            key: ""
          a_device_groups:
          - 5
          - 5
          t_lease_expires: 2000-01-23T04:56:07.000+00:00
          a_devices:
          - 5
          - 5
          r_device_group_labels:
          - 1
          - 1
          use_watchdog: true
          t_satisfied: 2000-01-23T04:56:07.000+00:00
          r_devices:
          - 0
          - 0
          is_satisfied: true
          response_message: response_message
          details: details
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          t_requested: 2000-01-23T04:56:07.000+00:00
          r_device_groups:
          - 6
          - 6
          status: status
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?page=4
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?page=2
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/ReservationSessionSerializerReadOnly'
          type: array
      type: object
    PaginatedRoomList:
      example:
        next: http://api.example.org/accounts/?page=4
        previous: http://api.example.org/accounts/?page=2
        count: 123
        results:
        - site: site
          metadata:
            key: ""
          name: name
          description: description
        - site: site
          metadata:
            key: ""
          name: name
          description: description
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?page=4
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?page=2
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Room'
          type: array
      type: object
    PaginatedSiteList:
      example:
        next: http://api.example.org/accounts/?page=4
        previous: http://api.example.org/accounts/?page=2
        count: 123
        results:
        - metadata:
            key: ""
          name: name
          description: description
          lon: 0.8008282
          lat: 6.0274563
        - metadata:
            key: ""
          name: name
          description: description
          lon: 0.8008282
          lat: 6.0274563
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?page=4
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?page=2
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Site'
          type: array
      type: object
    Part:
      description: Serializer for the Part model
      example:
        part_no: part_no
        metadata:
          key: ""
        board_no: board_no
        variant: variant
        chip_no: chip_no
        part_family: ""
        revision: revision
      properties:
        part_no:
          pattern: "^[-a-zA-Z0-9_]+$"
          readOnly: true
          type: string
        part_family:
          allOf:
          - $ref: '#/components/schemas/PartFamily'
          readOnly: true
        board_no:
          maxLength: 255
          nullable: true
          type: string
        variant:
          default: ""
          maxLength: 255
          type: string
        revision:
          default: ""
          maxLength: 255
          type: string
        chip_no:
          maxLength: 255
          nullable: true
          type: string
        metadata:
          additionalProperties: {}
          title: Additional data
          type: object
      required:
      - board_no
      - part_family
      - part_no
      type: object
    PartFamily:
      description: Serializer for the PartFamily model
      example:
        regex_pattern: regex_pattern
        metadata:
          key: ""
        name: name
        description: description
      properties:
        name:
          maxLength: 100
          pattern: "^[-a-zA-Z0-9_]+$"
          title: Part family name
          type: string
        regex_pattern:
          maxLength: 255
          nullable: true
          type: string
        description:
          maxLength: 255
          type: string
        metadata:
          additionalProperties: {}
          title: Additional data
          type: object
      required:
      - name
      type: object
    PatchedDeviceGroupSerializerWithDevicePk:
      example:
        is_reserved: true
        metadata:
          key: ""
        devices:
        - 6
        - 6
        permission_groups:
        - permission_groups
        - permission_groups
        name: name
        id: 0
      properties:
        id:
          readOnly: true
          type: integer
        devices:
          items:
            type: integer
          type: array
        is_reserved:
          nullable: true
          readOnly: true
          type: boolean
        permission_groups:
          items:
            type: string
          type: array
          writeOnly: true
        name:
          maxLength: 100
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        metadata:
          additionalProperties: {}
          nullable: true
          type: object
      type: object
    PatchedLabelSerializerWithPermissions:
      example:
        metadata:
          key: ""
        device_groups:
        - 6
        - 6
        permission_groups:
        - permission_groups
        - permission_groups
        name: name
        id: 0
      properties:
        id:
          readOnly: true
          type: integer
        device_groups:
          items:
            type: integer
          type: array
        permission_groups:
          items:
            type: string
          type: array
          writeOnly: true
        name:
          maxLength: 100
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        metadata:
          additionalProperties: {}
          nullable: true
          type: object
      type: object
    PatchedLoggedInUser:
      example:
        is_superuser: true
        is_staff: true
        last_name: last_name
        groups:
        - groups
        - groups
        first_name: first_name
        email: email
        username: username
      properties:
        username:
          description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
            \ only."
          maxLength: 150
          pattern: "^[\\w.@+-]+$"
          type: string
        email:
          format: email
          maxLength: 254
          title: Email address
          type: string
        first_name:
          maxLength: 150
          type: string
        last_name:
          maxLength: 150
          type: string
        is_staff:
          description: Designates whether the user can log into this admin site.
          title: Staff status
          type: boolean
        groups:
          items:
            type: string
          readOnly: true
          type: array
        is_superuser:
          description: Designates that this user has all permissions without explicitly
            assigning them.
          title: Superuser status
          type: boolean
      type: object
    PatchedObjectPermissions:
      example:
        users:
          key: ""
        user_groups:
          key: ""
      properties:
        users:
          additionalProperties: {}
          type: object
        user_groups:
          additionalProperties: {}
          type: object
      type: object
    PatchedPart:
      description: Serializer for the Part model
      example:
        part_no: part_no
        metadata:
          key: ""
        board_no: board_no
        variant: variant
        chip_no: chip_no
        part_family: ""
        revision: revision
      properties:
        part_no:
          pattern: "^[-a-zA-Z0-9_]+$"
          readOnly: true
          type: string
        part_family:
          allOf:
          - $ref: '#/components/schemas/PartFamily'
          readOnly: true
        board_no:
          maxLength: 255
          nullable: true
          type: string
        variant:
          default: ""
          maxLength: 255
          type: string
        revision:
          default: ""
          maxLength: 255
          type: string
        chip_no:
          maxLength: 255
          nullable: true
          type: string
        metadata:
          additionalProperties: {}
          title: Additional data
          type: object
      type: object
    PatchedPartFamily:
      description: Serializer for the PartFamily model
      example:
        regex_pattern: regex_pattern
        metadata:
          key: ""
        name: name
        description: description
      properties:
        name:
          maxLength: 100
          pattern: "^[-a-zA-Z0-9_]+$"
          title: Part family name
          type: string
        regex_pattern:
          maxLength: 255
          nullable: true
          type: string
        description:
          maxLength: 255
          type: string
        metadata:
          additionalProperties: {}
          title: Additional data
          type: object
      type: object
    PatchedPermissionGroup:
      example:
        permissions:
        - permissions
        - permissions
        name: name
        id: 0
      properties:
        id:
          readOnly: true
          type: integer
        permissions:
          items:
            type: string
          readOnly: true
          type: array
        name:
          maxLength: 150
          type: string
      type: object
    PatchedResourcePermissions:
      example:
        permissions:
        - null
        - null
        id: 0
      properties:
        id:
          type: integer
        permissions:
          default:
          - add
          - view
          - delete
          - change
          items:
            $ref: '#/components/schemas/PermissionsEnum'
          type: array
      type: object
    PatchedRoom:
      description: Serializer for the Room model
      example:
        site: site
        metadata:
          key: ""
        name: name
        description: description
      properties:
        name:
          maxLength: 100
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        site:
          readOnly: true
          type: string
        description:
          maxLength: 255
          type: string
        metadata:
          additionalProperties: {}
          title: Additional data
          type: object
      type: object
    PatchedSite:
      description: Serializer for the Site model
      example:
        metadata:
          key: ""
        name: name
        description: description
        lon: 0.8008282
        lat: 6.0274563
      properties:
        name:
          maxLength: 100
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        description:
          maxLength: 255
          type: string
        lon:
          format: float
          title: Longitude in WGS84
          type: number
        lat:
          format: float
          title: Latitude in WGS84
          type: number
        metadata:
          additionalProperties: {}
          title: Additional data
          type: object
      type: object
    PatchedWriteOnlyDevice:
      description: Serializes Device querysets to JSON
      example:
        metadata:
          key: ""
        date_created: 2000-01-23T04:56:07.000+00:00
        part: part
        permission_groups:
        - permission_groups
        - permission_groups
        uri: uri
        is_reserved: true
        is_wstk: true
        last_update: 2000-01-23T04:56:07.000+00:00
        online: true
        location:
          metadata:
            key: ""
          description: description
          id: 6
          room: room
        id: 0
        loc_desc: loc_desc
        sn_or_name: sn_or_name
      properties:
        id:
          readOnly: true
          type: integer
        part:
          type: string
        loc_desc:
          readOnly: true
          type: string
        is_reserved:
          nullable: true
          readOnly: true
          type: boolean
        permission_groups:
          items:
            type: string
          type: array
          writeOnly: true
        location:
          $ref: '#/components/schemas/LocationSerializerWriteOnly'
        sn_or_name:
          maxLength: 255
          nullable: true
          title: Device name or serial number
          type: string
        is_wstk:
          title: If the device is a WSTK
          type: boolean
        uri:
          maxLength: 255
          nullable: true
          type: string
        online:
          title: Is online
          type: boolean
        last_update:
          format: date-time
          readOnly: true
          type: string
        date_created:
          format: date-time
          readOnly: true
          type: string
        metadata:
          additionalProperties: {}
          title: Additional data
          type: object
      type: object
    PermissionGroup:
      example:
        permissions:
        - permissions
        - permissions
        name: name
        id: 0
      properties:
        id:
          readOnly: true
          type: integer
        permissions:
          items:
            type: string
          readOnly: true
          type: array
        name:
          maxLength: 150
          type: string
      required:
      - id
      - name
      - permissions
      type: object
    PermissionsEnum:
      enum:
      - view
      - change
      - add
      - delete
      type: string
    ReservationRequest:
      example:
        r_devices:
        - 0
        - 0
        metadata:
          key: ""
        details: details
        r_device_groups:
        - 6
        - 6
        r_device_group_labels:
        - 1
        - 1
        use_watchdog: true
      properties:
        details:
          maxLength: 255
          type: string
        r_devices:
          items:
            type: integer
          type: array
        r_device_groups:
          items:
            type: integer
          type: array
        r_device_group_labels:
          items:
            type: integer
          type: array
        use_watchdog:
          type: boolean
        metadata:
          additionalProperties: {}
          title: Additional data
          type: object
      type: object
    ReservationSessionSerializerReadOnly:
      example:
        owner: null
        t_completed: 2000-01-23T04:56:07.000+00:00
        metadata:
          key: ""
        a_device_groups:
        - 5
        - 5
        t_lease_expires: 2000-01-23T04:56:07.000+00:00
        a_devices:
        - 5
        - 5
        r_device_group_labels:
        - 1
        - 1
        use_watchdog: true
        t_satisfied: 2000-01-23T04:56:07.000+00:00
        r_devices:
        - 0
        - 0
        is_satisfied: true
        response_message: response_message
        details: details
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        t_requested: 2000-01-23T04:56:07.000+00:00
        r_device_groups:
        - 6
        - 6
        status: status
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        owner:
          $ref: '#/components/schemas/ReservationSessionSerializerReadOnly_owner'
        is_satisfied:
          readOnly: true
          type: boolean
        response_message:
          readOnly: true
          type: string
        status:
          readOnly: true
          type: string
        details:
          readOnly: true
          type: string
        use_watchdog:
          type: boolean
        t_requested:
          format: date-time
          readOnly: true
          type: string
        t_satisfied:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        t_completed:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        t_lease_expires:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        metadata:
          additionalProperties: {}
          readOnly: true
          title: Additional data
          type: object
        r_devices:
          items:
            type: integer
          readOnly: true
          type: array
        r_device_groups:
          items:
            type: integer
          readOnly: true
          type: array
        r_device_group_labels:
          items:
            type: integer
          readOnly: true
          type: array
        a_devices:
          items:
            type: integer
          readOnly: true
          type: array
        a_device_groups:
          items:
            type: integer
          readOnly: true
          type: array
      required:
      - a_device_groups
      - a_devices
      - details
      - id
      - is_satisfied
      - metadata
      - owner
      - r_device_group_labels
      - r_device_groups
      - r_devices
      - response_message
      - status
      - t_completed
      - t_lease_expires
      - t_requested
      - t_satisfied
      type: object
    ResourcePermissions:
      example:
        permissions:
        - null
        - null
        id: 0
      properties:
        id:
          type: integer
        permissions:
          default:
          - add
          - view
          - delete
          - change
          items:
            $ref: '#/components/schemas/PermissionsEnum'
          type: array
      required:
      - id
      type: object
    Room:
      description: Serializer for the Room model
      example:
        site: site
        metadata:
          key: ""
        name: name
        description: description
      properties:
        name:
          maxLength: 100
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        site:
          readOnly: true
          type: string
        description:
          maxLength: 255
          type: string
        metadata:
          additionalProperties: {}
          title: Additional data
          type: object
      required:
      - name
      - site
      type: object
    Site:
      description: Serializer for the Site model
      example:
        metadata:
          key: ""
        name: name
        description: description
        lon: 0.8008282
        lat: 6.0274563
      properties:
        name:
          maxLength: 100
          pattern: "^[-a-zA-Z0-9_]+$"
          type: string
        description:
          maxLength: 255
          type: string
        lon:
          format: float
          title: Longitude in WGS84
          type: number
        lat:
          format: float
          title: Latitude in WGS84
          type: number
        metadata:
          additionalProperties: {}
          title: Additional data
          type: object
      required:
      - lat
      - lon
      - name
      type: object
    Token:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        key: key
      properties:
        key:
          maxLength: 40
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
      required:
      - created
      - key
      type: object
    User:
      description: |-
        Used for showing username of the person currently
        owning the device instead of showing user id.
      example:
        username: username
      properties:
        username:
          description: "Required. 150 characters or fewer. Letters, digits and @/./+/-/_\
            \ only."
          maxLength: 150
          pattern: "^[\\w.@+-]+$"
          type: string
      required:
      - username
      type: object
    WriteOnlyDevice:
      description: Serializes Device querysets to JSON
      example:
        metadata:
          key: ""
        date_created: 2000-01-23T04:56:07.000+00:00
        part: part
        permission_groups:
        - permission_groups
        - permission_groups
        uri: uri
        is_reserved: true
        is_wstk: true
        last_update: 2000-01-23T04:56:07.000+00:00
        online: true
        location:
          metadata:
            key: ""
          description: description
          id: 6
          room: room
        id: 0
        loc_desc: loc_desc
        sn_or_name: sn_or_name
      properties:
        id:
          readOnly: true
          type: integer
        part:
          type: string
        loc_desc:
          readOnly: true
          type: string
        is_reserved:
          nullable: true
          readOnly: true
          type: boolean
        permission_groups:
          items:
            type: string
          type: array
          writeOnly: true
        location:
          $ref: '#/components/schemas/LocationSerializerWriteOnly'
        sn_or_name:
          maxLength: 255
          nullable: true
          title: Device name or serial number
          type: string
        is_wstk:
          title: If the device is a WSTK
          type: boolean
        uri:
          maxLength: 255
          nullable: true
          type: string
        online:
          title: Is online
          type: boolean
        last_update:
          format: date-time
          readOnly: true
          type: string
        date_created:
          format: date-time
          readOnly: true
          type: string
        metadata:
          additionalProperties: {}
          title: Additional data
          type: object
      required:
      - date_created
      - id
      - is_reserved
      - last_update
      - loc_desc
      - location
      - part
      type: object
    ReservationSessionSerializerReadOnly_owner:
      allOf:
      - $ref: '#/components/schemas/User'
      nullable: true
      readOnly: true
  securitySchemes:
    cookieAuth:
      in: cookie
      name: sessionid
      type: apiKey
    tokenAuth:
      description: Token-based authentication with required prefix "Token"
      in: header
      name: Authorization
      type: apiKey
